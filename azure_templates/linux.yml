parameters:
  - name: pythonVersions
    type: object
    default: []

jobs:
- job:
  strategy:
    matrix:
      ${{ each pythonVersion in parameters.pythonVersions }}:
        Linux Python ${{ pythonVersion }}:
          imageName: 'ubuntu-latest'
          python.version: ${{ pythonVersion }}
          python.joined: ${{ join(' ', parameters.pythonVersions) }}

  pool:
    vmImage: $(imageName)

  steps:
  - checkout: self
    submodules: true

  - bash: |
      SELECTED_PYTHON=$(echo '$(python.joined)' | awk '{ print $1 }')
      echo "##vso[task.setvariable variable=SELECTED_PYTHON]$SELECTED_PYTHON"
    displayName: Set PyPI upload version

  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: | 
      conda config --set always_yes yes --set anaconda_upload no
      conda update -q conda
      conda create -n test python=$(python.version) conda-build conda-verify
    displayName: Create environment

  - bash: |
      source activate test
      CONDA_PKG=$(conda-build --output .)
      echo "##vso[task.setvariable variable=CONDA_PKG]$CONDA_PKG"
      conda-build --no-test .
    displayName: Build
  
  - bash: |
      source activate test
      conda-build -t $CONDA_PKG
    displayName: Test

  - script: |
      source activate test
      conda install anaconda-client
      anaconda -t $(Conda Token) upload --force $CONDA_PKG
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
    displayName: Upload to Anaconda

  - script: |
      source activate test
      conda install numpy cython twine
      python setup.py sdist
      twine upload -u '__token__' -p $(PyPI Token) dist/*
    condition: and(eq(variables['SELECTED_PYTHON'], variables['python.version']), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Upload to PyPI